---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sealed-secrets
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sealedsecrets.bitnami.com
spec:
  group: bitnami.com
  names:
    kind: SealedSecret
    listKind: SealedSecretList
    plural: sealedsecrets
    singular: sealedsecret
  scope: Namespaced
  version: v1alpha1
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sealed-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
  - delete
- apiGroups:
  - bitnami.com
  resources:
  - sealedsecrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sealed-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sealed-secrets
subjects:
- kind: ServiceAccount
  name: sealed-secrets
  namespace: commons
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sealed-secrets
rules:
- apiGroups:
  - ""
  resourceNames:
  - sealed-secrets
  resources:
  - secrets
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sealed-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sealed-secrets
subjects:
- kind: ServiceAccount
  name: sealed-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: sealed-secrets
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: sealed-secrets
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: sealed-secrets
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sealed-secrets
  template:
    metadata:
      labels:
        app: sealed-secrets
    spec:
      containers:
      - args:
        - --key-name=sealed-secrets
        command:
        - controller
        image: quay.io/bitnami/sealed-secrets-controller:v0.7.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        name: sealed-secrets
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
      serviceAccountName: sealed-secrets
